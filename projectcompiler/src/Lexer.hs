{-# OPTIONS_GHC -fno-warn-unused-binds -fno-warn-missing-signatures #-}
{-# LANGUAGE CPP #-}
{-# LINE 1 "Lexer.x" #-}

{-# OPTIONS -w -funbox-strict-fields #-}
module Lexer where

import Prelude hiding ( GT, LT, EQ )
import System.Console.GetOpt ( OptDescr(..), ArgOrder(..), getOpt, usageInfo )
import System.Environment ( getArgs, getProgName )
import System.Directory ( doesFileExist )
import Control.Monad
import Data.Maybe
import Numeric ( readDec )
import Data.Char ( chr )
import Data.Map ( Map )
import qualified Data.Map as Map ( empty )

#if __GLASGOW_HASKELL__ >= 603
#include "ghcconfig.h"
#elif defined(__GLASGOW_HASKELL__)
#include "config.h"
#endif
#if __GLASGOW_HASKELL__ >= 503
import Data.Array
import Data.Array.Base (unsafeAt)
#else
import Array
#endif
{-# LINE 1 "templates/wrappers.hs" #-}
-- -----------------------------------------------------------------------------
-- Alex wrapper code.
--
-- This code is in the PUBLIC DOMAIN; you may copy it freely and use
-- it for any purpose whatsoever.


import Control.Applicative as App (Applicative (..))
import qualified Control.Monad (ap)


import Data.Word (Word8)
















import Data.Char (ord)
import qualified Data.Bits

-- | Encode a Haskell String to a list of Word8 values, in UTF8 format.
utf8Encode :: Char -> [Word8]
utf8Encode = map fromIntegral . go . ord
 where
  go oc
   | oc <= 0x7f       = [oc]

   | oc <= 0x7ff      = [ 0xc0 + (oc `Data.Bits.shiftR` 6)
                        , 0x80 + oc Data.Bits..&. 0x3f
                        ]

   | oc <= 0xffff     = [ 0xe0 + (oc `Data.Bits.shiftR` 12)
                        , 0x80 + ((oc `Data.Bits.shiftR` 6) Data.Bits..&. 0x3f)
                        , 0x80 + oc Data.Bits..&. 0x3f
                        ]
   | otherwise        = [ 0xf0 + (oc `Data.Bits.shiftR` 18)
                        , 0x80 + ((oc `Data.Bits.shiftR` 12) Data.Bits..&. 0x3f)
                        , 0x80 + ((oc `Data.Bits.shiftR` 6) Data.Bits..&. 0x3f)
                        , 0x80 + oc Data.Bits..&. 0x3f
                        ]



type Byte = Word8

-- -----------------------------------------------------------------------------
-- The input type


type AlexInput = (AlexPosn,     -- current position,
                  Char,         -- previous char
                  [Byte],       -- pending bytes on current char
                  String)       -- current input string

ignorePendingBytes :: AlexInput -> AlexInput
ignorePendingBytes (p,c,_ps,s) = (p,c,[],s)

alexInputPrevChar :: AlexInput -> Char
alexInputPrevChar (_p,c,_bs,_s) = c

alexGetByte :: AlexInput -> Maybe (Byte,AlexInput)
alexGetByte (p,c,(b:bs),s) = Just (b,(p,c,bs,s))
alexGetByte (_,_,[],[]) = Nothing
alexGetByte (p,_,[],(c:s))  = let p' = alexMove p c
                                  (b:bs) = utf8Encode c
                              in p' `seq`  Just (b, (p', c, bs, s))





























































-- -----------------------------------------------------------------------------
-- Token positions

-- `Posn' records the location of a token in the input text.  It has three
-- fields: the address (number of chacaters preceding the token), line number
-- and column of a token within the file. `start_pos' gives the position of the
-- start of the file and `eof_pos' a standard encoding for the end of file.
-- `move_pos' calculates the new position after traversing a given character,
-- assuming the usual eight character tab stops.


data AlexPosn = AlexPn !Int !Int !Int
        deriving (Eq,Show)

alexStartPos :: AlexPosn
alexStartPos = AlexPn 0 1 1

alexMove :: AlexPosn -> Char -> AlexPosn
alexMove (AlexPn a l c) '\t' = AlexPn (a+1)  l     (((c+alex_tab_size-1) `div` alex_tab_size)*alex_tab_size+1)
alexMove (AlexPn a l _) '\n' = AlexPn (a+1) (l+1)   1
alexMove (AlexPn a l c) _    = AlexPn (a+1)  l     (c+1)


-- -----------------------------------------------------------------------------
-- Default monad


data AlexState = AlexState {
        alex_pos :: !AlexPosn,  -- position at current input location
        alex_inp :: String,     -- the current input
        alex_chr :: !Char,      -- the character before the input
        alex_bytes :: [Byte],
        alex_scd :: !Int        -- the current startcode

      , alex_ust :: AlexUserState -- AlexUserState will be defined in the user program

    }

-- Compile with -funbox-strict-fields for best results!

runAlex :: String -> Alex a -> Either String a
runAlex input__ (Alex f)
   = case f (AlexState {alex_pos = alexStartPos,
                        alex_inp = input__,
                        alex_chr = '\n',
                        alex_bytes = [],

                        alex_ust = alexInitUserState,

                        alex_scd = 0}) of Left msg -> Left msg
                                          Right ( _, a ) -> Right a

newtype Alex a = Alex { unAlex :: AlexState -> Either String (AlexState, a) }

instance Functor Alex where
  fmap f a = Alex $ \s -> case unAlex a s of
                            Left msg -> Left msg
                            Right (s', a') -> Right (s', f a')

instance Applicative Alex where
  pure a   = Alex $ \s -> Right (s, a)
  fa <*> a = Alex $ \s -> case unAlex fa s of
                            Left msg -> Left msg
                            Right (s', f) -> case unAlex a s' of
                                               Left msg -> Left msg
                                               Right (s'', b) -> Right (s'', f b)

instance Monad Alex where
  m >>= k  = Alex $ \s -> case unAlex m s of
                                Left msg -> Left msg
                                Right (s',a) -> unAlex (k a) s'
  return = App.pure

alexGetInput :: Alex AlexInput
alexGetInput
 = Alex $ \s@AlexState{alex_pos=pos,alex_chr=c,alex_bytes=bs,alex_inp=inp__} ->
        Right (s, (pos,c,bs,inp__))

alexSetInput :: AlexInput -> Alex ()
alexSetInput (pos,c,bs,inp__)
 = Alex $ \s -> case s{alex_pos=pos,alex_chr=c,alex_bytes=bs,alex_inp=inp__} of
                  state__@(AlexState{}) -> Right (state__, ())

alexError :: String -> Alex a
alexError message = Alex $ const $ Left message

alexGetStartCode :: Alex Int
alexGetStartCode = Alex $ \s@AlexState{alex_scd=sc} -> Right (s, sc)

alexSetStartCode :: Int -> Alex ()
alexSetStartCode sc = Alex $ \s -> Right (s{alex_scd=sc}, ())


alexGetUserState :: Alex AlexUserState
alexGetUserState = Alex $ \s@AlexState{alex_ust=ust} -> Right (s,ust)

alexSetUserState :: AlexUserState -> Alex ()
alexSetUserState ss = Alex $ \s -> Right (s{alex_ust=ss}, ())


alexMonadScan = do
  inp__ <- alexGetInput
  sc <- alexGetStartCode
  case alexScan inp__ sc of
    AlexEOF -> alexEOF
    AlexError ((AlexPn _ line column),_,_,_) -> alexError $ "lexical error at line " ++ (show line) ++ ", column " ++ (show column)
    AlexSkip  inp__' _len -> do
        alexSetInput inp__'
        alexMonadScan
    AlexToken inp__' len action -> do
        alexSetInput inp__'
        action (ignorePendingBytes inp__) len

-- -----------------------------------------------------------------------------
-- Useful token actions

type AlexAction result = AlexInput -> Int -> Alex result

-- just ignore this token and scan another one
-- skip :: AlexAction result
skip _input _len = alexMonadScan

-- ignore this token, but set the start code to a new value
-- begin :: Int -> AlexAction result
begin code _input _len = do alexSetStartCode code; alexMonadScan

-- perform an action for this token, and set the start code to a new value
andBegin :: AlexAction result -> Int -> AlexAction result
(action `andBegin` code) input__ len = do
  alexSetStartCode code
  action input__ len

token :: (AlexInput -> Int -> token) -> AlexAction token
token t input__ len = return (t input__ len)



-- -----------------------------------------------------------------------------
-- Monad (with ByteString input)







































































































-- -----------------------------------------------------------------------------
-- Basic wrapper

























-- -----------------------------------------------------------------------------
-- Basic wrapper, ByteString version
































-- -----------------------------------------------------------------------------
-- Posn wrapper

-- Adds text positions to the basic model.













-- -----------------------------------------------------------------------------
-- Posn wrapper, ByteString version














-- -----------------------------------------------------------------------------
-- GScan wrapper

-- For compatibility with previous versions of Alex, and because we can.














alex_tab_size :: Int
alex_tab_size = 8
alex_base :: Array Int Int
alex_base = listArray (0 :: Int, 170)
  [ -8
  , 13
  , 259
  , 505
  , 751
  , 879
  , 1007
  , 1135
  , 1263
  , 1391
  , 1519
  , 1647
  , 1775
  , 1903
  , 2031
  , 0
  , 127
  , 0
  , 2144
  , 0
  , 2257
  , 0
  , 2370
  , 0
  , 2483
  , 0
  , 2548
  , 0
  , 2613
  , -42
  , 0
  , 2678
  , 70
  , 0
  , 2743
  , 0
  , 2808
  , 3064
  , 3182
  , 3246
  , 0
  , 3502
  , 3438
  , 0
  , 508
  , 80
  , 477
  , 3694
  , 3630
  , 0
  , -31
  , 754
  , -30
  , 474
  , 537
  , -18
  , 3886
  , 3822
  , 0
  , 4078
  , 4014
  , 0
  , 0
  , 0
  , -29
  , 0
  , 0
  , 0
  , 0
  , 0
  , 564
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -17
  , 0
  , 0
  , 760
  , 0
  , 0
  , 0
  , -15
  , 4262
  , 0
  , -14
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 3183
  , 4314
  , 4389
  , 4464
  , 4539
  , 4614
  , 4689
  , 4764
  , 4839
  , 4914
  , 4989
  , 5064
  , 5139
  , 0
  , -24
  , 0
  , -20
  , -36
  , 0
  , 0
  , -33
  , 0
  , -5
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 5214
  , 5289
  , 5364
  , 5439
  , 5514
  , 5589
  , 5664
  , 5739
  , 5814
  , 5889
  , 5964
  , 6039
  , 6114
  , 6189
  , 6264
  , 6339
  , 6414
  , 6489
  , 6564
  , 6639
  , 6714
  , 6789
  , 6864
  , 6939
  , 7014
  , 7089
  , 7164
  , 7239
  , 7314
  , 7389
  , 7464
  , 7539
  , 7614
  , 7689
  , 7764
  , 7839
  , 7914
  , 7989
  , 8064
  , 530
  , 8070
  ]

alex_table :: Array Int Int
alex_table = listArray (0 :: Int, 8325)
  [ 0
  , 70
  , 70
  , 82
  , 76
  , 70
  , 45
  , 45
  , 45
  , 45
  , 45
  , 45
  , 45
  , 45
  , 45
  , 45
  , 71
  , 50
  , 63
  , 52
  , 55
  , 38
  , 62
  , 66
  , 70
  , 116
  , 87
  , 67
  , 117
  , 129
  , 0
  , 0
  , 123
  , 124
  , 113
  , 111
  , 125
  , 112
  , 127
  , 114
  , 169
  , 169
  , 169
  , 169
  , 169
  , 169
  , 169
  , 169
  , 169
  , 169
  , 128
  , 126
  , 118
  , 115
  , 120
  , 64
  , 119
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 158
  , 150
  , 155
  , 137
  , 156
  , 150
  , 150
  , 150
  , 167
  , 150
  , 150
  , 150
  , 150
  , 140
  , 163
  , 150
  , 150
  , 147
  , 150
  , 149
  , 150
  , 150
  , 154
  , 150
  , 150
  , 150
  , 121
  , 0
  , 122
  , 53
  , 53
  , 53
  , 53
  , 53
  , 53
  , 53
  , 53
  , 53
  , 53
  , 91
  , 91
  , 91
  , 91
  , 91
  , 91
  , 91
  , 91
  , 91
  , 91
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 59
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 60
  , 5
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 36
  , 10
  , 23
  , 23
  , 23
  , 24
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 68
  , 26
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 56
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 57
  , 6
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 34
  , 11
  , 21
  , 21
  , 21
  , 22
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 97
  , 44
  , 44
  , 0
  , 44
  , 44
  , 44
  , 75
  , 75
  , 75
  , 75
  , 75
  , 75
  , 75
  , 75
  , 75
  , 75
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 95
  , 44
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 90
  , 70
  , 70
  , 0
  , 0
  , 70
  , 169
  , 169
  , 169
  , 169
  , 169
  , 169
  , 169
  , 169
  , 169
  , 169
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 70
  , 80
  , 0
  , 0
  , 94
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , 74
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 41
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 42
  , 8
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 28
  , 13
  , 17
  , 17
  , 17
  , 18
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 86
  , 51
  , 51
  , 51
  , 51
  , 51
  , 51
  , 44
  , 44
  , 0
  , 44
  , 44
  , 44
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 84
  , 51
  , 0
  , 0
  , 0
  , 0
  , 0
  , 44
  , 0
  , 92
  , 0
  , 0
  , 0
  , 0
  , 78
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 29
  , 29
  , 29
  , 29
  , 29
  , 29
  , 29
  , 29
  , 29
  , 29
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 85
  , 0
  , 0
  , 81
  , 0
  , 0
  , 0
  , 0
  , 0
  , 93
  , 0
  , 46
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 88
  , 0
  , 0
  , 0
  , 0
  , 0
  , 89
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 47
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 48
  , 7
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 31
  , 12
  , 19
  , 19
  , 19
  , 20
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 59
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 61
  , 56
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 58
  , 47
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 49
  , 41
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 43
  , 37
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 5
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 6
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 33
  , 7
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 30
  , 8
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 27
  , 9
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 28
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 31
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 34
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 36
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 42
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 60
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , 0
  , -1
  , -1
  , -1
  , -1
  , 0
  , 0
  , 0
  , -1
  , -1
  , 0
  , 38
  , -1
  , -1
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , -1
  , 0
  , -1
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , -1
  , 0
  , -1
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 37
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 39
  , 9
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 26
  , 14
  , 15
  , 15
  , 15
  , 16
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 51
  , 51
  , 51
  , 51
  , 51
  , 51
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 51
  , 0
  , 77
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 32
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 79
  , 0
  , 54
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 72
  , 0
  , 0
  , 0
  , 0
  , 0
  , 73
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 98
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 100
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 103
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 104
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 106
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 110
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 130
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 168
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 166
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 132
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 134
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 162
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 136
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 160
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 159
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 139
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 157
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 144
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 153
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 146
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 151
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 148
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 145
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 143
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 142
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 141
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 138
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 152
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 161
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 164
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 165
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 133
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 131
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 135
  , 150
  , 150
  , 150
  , 150
  , 150
  , 109
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 108
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 107
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 105
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 102
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , -1
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 101
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 150
  , 150
  , 150
  , 150
  , 150
  , 99
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 150
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 37
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 40
  , 39
  , 9
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 25
  , 26
  , 14
  , 15
  , 15
  , 15
  , 16
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  ]

alex_check :: Array Int Int
alex_check = listArray (0 :: Int, 8325)
  [ -1
  , 9
  , 10
  , 34
  , 34
  , 13
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 34
  , 34
  , 47
  , 34
  , 34
  , 45
  , 42
  , 10
  , 32
  , 61
  , 34
  , 47
  , 61
  , 37
  , -1
  , -1
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 42
  , 61
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , -1
  , 125
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 10
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 10
  , 8
  , 9
  , -1
  , 11
  , 12
  , 13
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 34
  , 32
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 9
  , 10
  , -1
  , -1
  , 13
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 32
  , 92
  , -1
  , -1
  , 92
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 10
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 8
  , 9
  , -1
  , 11
  , 12
  , 13
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 34
  , 32
  , -1
  , -1
  , -1
  , -1
  , -1
  , 32
  , -1
  , 34
  , -1
  , -1
  , -1
  , -1
  , 39
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 92
  , -1
  , -1
  , 92
  , -1
  , -1
  , -1
  , -1
  , -1
  , 92
  , -1
  , 94
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 110
  , -1
  , -1
  , -1
  , -1
  , -1
  , 116
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 10
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 33
  , -1
  , 35
  , 36
  , 37
  , 38
  , -1
  , -1
  , -1
  , 42
  , 43
  , -1
  , 45
  , 46
  , 47
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , 60
  , 61
  , 62
  , 63
  , 64
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 92
  , -1
  , 94
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 124
  , -1
  , 126
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 32
  , -1
  , 34
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 92
  , -1
  , 94
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 110
  , -1
  , -1
  , -1
  , -1
  , -1
  , 116
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 10
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  ]

alex_deflt :: Array Int Int
alex_deflt = listArray (0 :: Int, 170)
  [ -1
  , 65
  , 69
  , 96
  , 83
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 25
  , 25
  , 27
  , 27
  , 30
  , 30
  , 33
  , 33
  , 35
  , 35
  , 40
  , 40
  , 43
  , 43
  , -1
  , 49
  , 49
  , -1
  , 58
  , 58
  , 61
  , 61
  , 170
  , 170
  , 170
  , 170
  , 96
  , 96
  , 96
  , -1
  , -1
  , -1
  , 83
  , 83
  , 83
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 69
  , 69
  , 69
  , 65
  , 65
  , 65
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 170
  ]

alex_accept = listArray (0 :: Int, 170)
  [ AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAcc 102
  , AlexAcc 101
  , AlexAccSkip
  , AlexAccSkip
  , AlexAcc 100
  , AlexAcc 99
  , AlexAcc 98
  , AlexAccSkip
  , AlexAccSkip
  , AlexAcc 97
  , AlexAcc 96
  , AlexAcc 95
  , AlexAcc 94
  , AlexAcc 93
  , AlexAcc 92
  , AlexAcc 91
  , AlexAcc 90
  , AlexAcc 89
  , AlexAcc 88
  , AlexAccSkip
  , AlexAcc 87
  , AlexAcc 86
  , AlexAcc 85
  , AlexAcc 84
  , AlexAcc 83
  , AlexAcc 82
  , AlexAcc 81
  , AlexAcc 80
  , AlexAcc 79
  , AlexAcc 78
  , AlexAcc 77
  , AlexAcc 76
  , AlexAccSkip
  , AlexAcc 75
  , AlexAcc 74
  , AlexAcc 73
  , AlexAcc 72
  , AlexAcc 71
  , AlexAcc 70
  , AlexAcc 69
  , AlexAcc 68
  , AlexAcc 67
  , AlexAcc 66
  , AlexAcc 65
  , AlexAcc 64
  , AlexAcc 63
  , AlexAcc 62
  , AlexAcc 61
  , AlexAcc 60
  , AlexAcc 59
  , AlexAcc 58
  , AlexAcc 57
  , AlexAcc 56
  , AlexAcc 55
  , AlexAcc 54
  , AlexAcc 53
  , AlexAcc 52
  , AlexAcc 51
  , AlexAcc 50
  , AlexAcc 49
  , AlexAcc 48
  , AlexAcc 47
  , AlexAcc 46
  , AlexAcc 45
  , AlexAcc 44
  , AlexAcc 43
  , AlexAcc 42
  , AlexAcc 41
  , AlexAcc 40
  , AlexAcc 39
  , AlexAcc 38
  , AlexAcc 37
  , AlexAcc 36
  , AlexAcc 35
  , AlexAcc 34
  , AlexAcc 33
  , AlexAcc 32
  , AlexAcc 31
  , AlexAcc 30
  , AlexAcc 29
  , AlexAcc 28
  , AlexAcc 27
  , AlexAcc 26
  , AlexAcc 25
  , AlexAcc 24
  , AlexAcc 23
  , AlexAcc 22
  , AlexAcc 21
  , AlexAcc 20
  , AlexAcc 19
  , AlexAcc 18
  , AlexAcc 17
  , AlexAcc 16
  , AlexAcc 15
  , AlexAcc 14
  , AlexAcc 13
  , AlexAcc 12
  , AlexAcc 11
  , AlexAcc 10
  , AlexAcc 9
  , AlexAcc 8
  , AlexAcc 7
  , AlexAcc 6
  , AlexAcc 5
  , AlexAcc 4
  , AlexAcc 3
  , AlexAcc 2
  , AlexAcc 1
  , AlexAcc 0
  ]

alex_actions = array (0 :: Int, 103)
  [ (102,alex_action_0)
  , (101,alex_action_1)
  , (100,alex_action_3)
  , (99,alex_action_4)
  , (98,alex_action_5)
  , (97,alex_action_8)
  , (96,alex_action_9)
  , (95,alex_action_10)
  , (94,alex_action_11)
  , (93,alex_action_12)
  , (92,alex_action_13)
  , (91,alex_action_14)
  , (90,alex_action_15)
  , (89,alex_action_16)
  , (88,alex_action_17)
  , (87,alex_action_19)
  , (86,alex_action_20)
  , (85,alex_action_20)
  , (84,alex_action_20)
  , (83,alex_action_21)
  , (82,alex_action_22)
  , (81,alex_action_23)
  , (80,alex_action_24)
  , (79,alex_action_25)
  , (78,alex_action_26)
  , (77,alex_action_27)
  , (76,alex_action_29)
  , (75,alex_action_32)
  , (74,alex_action_33)
  , (73,alex_action_34)
  , (72,alex_action_35)
  , (71,alex_action_36)
  , (70,alex_action_37)
  , (69,alex_action_38)
  , (68,alex_action_39)
  , (67,alex_action_40)
  , (66,alex_action_41)
  , (65,alex_action_42)
  , (64,alex_action_43)
  , (63,alex_action_44)
  , (62,alex_action_45)
  , (61,alex_action_46)
  , (60,alex_action_47)
  , (59,alex_action_48)
  , (58,alex_action_49)
  , (57,alex_action_50)
  , (56,alex_action_51)
  , (55,alex_action_52)
  , (54,alex_action_53)
  , (53,alex_action_54)
  , (52,alex_action_55)
  , (51,alex_action_56)
  , (50,alex_action_57)
  , (49,alex_action_58)
  , (48,alex_action_59)
  , (47,alex_action_60)
  , (46,alex_action_61)
  , (45,alex_action_62)
  , (44,alex_action_63)
  , (43,alex_action_64)
  , (42,alex_action_65)
  , (41,alex_action_66)
  , (40,alex_action_67)
  , (39,alex_action_67)
  , (38,alex_action_67)
  , (37,alex_action_67)
  , (36,alex_action_67)
  , (35,alex_action_67)
  , (34,alex_action_67)
  , (33,alex_action_67)
  , (32,alex_action_67)
  , (31,alex_action_67)
  , (30,alex_action_67)
  , (29,alex_action_67)
  , (28,alex_action_67)
  , (27,alex_action_67)
  , (26,alex_action_67)
  , (25,alex_action_67)
  , (24,alex_action_67)
  , (23,alex_action_67)
  , (22,alex_action_67)
  , (21,alex_action_67)
  , (20,alex_action_67)
  , (19,alex_action_67)
  , (18,alex_action_67)
  , (17,alex_action_67)
  , (16,alex_action_67)
  , (15,alex_action_67)
  , (14,alex_action_67)
  , (13,alex_action_67)
  , (12,alex_action_67)
  , (11,alex_action_67)
  , (10,alex_action_67)
  , (9,alex_action_67)
  , (8,alex_action_67)
  , (7,alex_action_67)
  , (6,alex_action_67)
  , (5,alex_action_67)
  , (4,alex_action_67)
  , (3,alex_action_67)
  , (2,alex_action_67)
  , (1,alex_action_68)
  , (0,alex_action_69)
  ]

{-# LINE 105 "Lexer.x" #-}

-- Each action has type :: String -> Token

-- The token type:


data Lexeme = Lexeme AlexPosn LexemeClass (Maybe String)

instance Show Lexeme where 
    show (Lexeme _ EOF _)  = "  Lexeme EOF"
    show (Lexeme p cl mbs) = " Lexeme class=" ++ show cl ++ showap p ++ showst mbs
       where 
           showap pp = " posn=" ++ showPosn pp
           showst Nothing  = ""
           showst (Just s) = " string=" ++ show s

tokPosn :: Lexeme -> AlexPosn
tokPosn (Lexeme p _ _) = p

data LexemeClass =
    EOF |
    ID String |
    INT Int  |
    STRINGLITERAL String |
    CLASS |
    DEF |
    EXTENDS |
    IF |
    ELIF |
    ELSE |
    WHILE |
    RETURN |
    TYPECASE |
    STRING |
    INTEGER |
    OBJ |
    BOOLEAN |
    TRUE |
    FALSE |
    AND |
    OR |
    NOT |
    NOTHING |
    NONE |
    GETS |
    PLUS |
    MINUS | 
    TIMES |
    DIVIDE |
    EQUALS |
    ATMOST |
    LESS |
    ATLEAST |
    MORE |
    LBRACE |
    RBRACE |
    LPAREN |
    RPAREN |
    COMMA |
    SEMICOLON |
    DOT |
    COLON 
    deriving (Eq,Show)

mkL:: LexemeClass -> AlexInput -> Int -> Alex Lexeme 
mkL c (p, _, _, str) len= return (Lexeme p c (Just (take len str)))

--states

state_initial :: Int
state_initial = 0

-- actions

enterNewComment1, enterNewComment2, leaveComment , embedComment1, embedComment2, unembedComment1, unembedComment2 :: Action
enterNewString, leaveString, addAsciiToString, addCurrentToString, addControlToString  :: Action
getInteger, getVariable :: Action


enterNewComment1 input len= 
     do setLexerCommentDepth 1
        skip input len

enterNewComment2 input len= 
     do setLexerCommentDepth 1
        skip input len

embedComment1 input len =
    do cd <- getLexerCommentDepth
       setLexerCommentDepth (cd + 1)
       skip input len

embedComment2 input len =
    do cd <- getLexerCommentDepth
       setLexerCommentDepth (cd + 1)
       skip input len

unembedComment1 input len =
    do cd <- getLexerCommentDepth
       setLexerCommentDepth (cd - 1)
       when (cd == 1) (alexSetStartCode state_initial)
       skip input len

unembedComment2 input len =
    do cd <- getLexerCommentDepth
       setLexerCommentDepth (cd - 1)
       when (cd == 1) (alexSetStartCode state_initial)
       skip input len

getLexerCommentDepth :: Alex Int
getLexerCommentDepth = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, lexerCommentDepth ust)


setLexerCommentDepth:: Int -> Alex ()
setLexerCommentDepth ss= Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerCommentDepth=ss}}, ())

leaveComment input len =
    do cd <- getLexerCommentDepth
       setLexerCommentDepth (cd - 1)
       when (cd == 1) (alexSetStartCode state_initial)
       skip input len



setLexerCommentValue:: String -> Alex ()
setLexerCommentValue ss = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerCommentValue=ss}}, ())

getLexerCommentValue :: Alex String
getLexerCommentValue = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, lexerStringValue ust)


setLexerCommentState:: Bool -> Alex ()
setLexerCommentState ss = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerCommentState=ss}}, ())

data AlexUserState = AlexUserState
                   {
                       lexerCommentValue   :: String,
                       lexerCommentDepth   :: Int,
                       lexerCommentState   :: Bool,
                       lexerStringState    :: Bool,
                       lexerStringValue    :: String,
                       parserCollIdent     :: Map String Int,
                       parserCurrentToken  :: Lexeme,
                       parserPos          :: Pos
                   }

alexInitUserState :: AlexUserState
alexInitUserState = AlexUserState
                   {
                       lexerStringState = False,
                       lexerCommentDepth  = 0,
                       lexerStringValue   = "",
                       parserCollIdent    = Map.empty,
                       parserCurrentToken = Lexeme undefined EOF Nothing,
                       parserPos          = Nothing
                   }

enterNewString _     _   =
    do setLexerStringState True
       setLexerStringValue ""
       alexMonadScan

getLexerStringState :: Alex Bool
getLexerStringState = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, lexerStringState ust)

setLexerStringState :: Bool -> Alex ()
setLexerStringState ss = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerStringState=ss}}, ())

setLexerStringValue :: String -> Alex ()
setLexerStringValue ss = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerStringValue=ss}}, ())


addCharToComment :: Char -> Action
addCharToComment c _     _   =
    do addCharToLexerCommentValue c
       alexMonadScan

addCharToString :: Char -> Action
addCharToString c _     _   =
    do addCharToLexerStringValue c
       alexMonadScan

-- if we are given the special form '\^A'
addControlToString i@(_, _, _, input) len = addCharToString c' i len
  where
    c = if (len == 1)
           then head input
           else error "Invalid call to 'addControlToString'"
    v = ord c
    c' = if (v >= 64)
            then chr (v - 64)
            else error "Invalid call to 'addControlToString'"


addAsciiToString i@(_, _, _, input) len = if (v < 256)
                                          then addCharToString c i len
                                          else lexerError ("Invalid ascii value : " ++ input)
  where
    s = if (len == 4)
           then drop 1 input
           else error "Invalid call to 'addAsciiToString'"
    r = readDec s
    v = if (length r == 1)
           then fst (head r)
           else error "Invalid call to 'addAsciiToString'"
    c = chr v

addCurrentToString i@(_, _, _, input) len = addCharToString c i len
  where
    c = if (len == 1)
           then head input
           else error "Invalid call to addCurrentToString''"

addCharToLexerCommentValue :: Char -> Alex ()
addCharToLexerCommentValue c = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerCommentValue=c:lexerCommentValue (alex_ust s)}}, ())


addCharToLexerStringValue :: Char -> Alex ()
addCharToLexerStringValue c = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerStringValue=c:lexerStringValue (alex_ust s)}}, ())


getCollNameToIdent :: Alex (Map String Int)
getCollNameToIdent = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, parserCollIdent ust)

setCollNameToIdent :: Map String Int -> Alex ()
setCollNameToIdent ss = Alex $ \s -> Right (s{alex_ust=(alex_ust s){parserCollIdent=ss}}, ())

getParserCurrentToken :: Alex Lexeme
getParserCurrentToken = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, parserCurrentToken ust)

setParserCurrentToken :: Lexeme -> Alex ()
setParserCurrentToken ss = Alex $ \s -> Right (s{alex_ust=(alex_ust s){parserCurrentToken=ss}}, ())

getParserPos :: Alex Pos
getParserPos = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, parserPos ust)

setParserPos :: Pos -> Alex ()
setParserPos ss = Alex $ \s -> Right (s{alex_ust=(alex_ust s){parserPos=ss}}, ())

-- utilities

showPosn :: AlexPosn -> String
showPosn (AlexPn _ line col) = show line ++ ':': show col

type Pos     = Maybe AlexPosn

line_number :: Pos -> (Int, Int)
line_number Nothing                   = (0, 0)
line_number (Just (AlexPn _ lig col)) = (lig, col)



leaveString (p, _, _, input) len =
    do s <- getLexerStringValue
       setLexerStringState False
       return (Lexeme p (STRINGLITERAL (reverse s)) (Just (take len input)))

getLexerStringValue :: Alex String
getLexerStringValue = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, lexerStringValue ust)

getInteger (p, _, _, input) len = if (length r == 1)
                                  then return (Lexeme p (INT (fst (head r))) (Just s))
                                  else lexerError "Invalid number"
  where
    s = take len input
    r = readDec s

getVariable (p, _, _, input) len = return (Lexeme p (ID s) (Just s))
  where
    s = take len input


-- definition needed by Alex
alexEOF :: Alex Lexeme
alexEOF = return (Lexeme undefined EOF Nothing)
-- Execution
scanner :: String -> Either String [Lexeme]
scanner str = let loop = do (t, m) <- alexComplementError alexMonadScan
                            when (isJust m) (lexerError (fromJust m))
                            let tok@(Lexeme _ cl _) = t
                            if (cl == EOF)
                               then do f1 <- getLexerStringState
                                       d2 <- getLexerCommentDepth
                                       if ((not f1) && (d2 == 0))
                                          then return [tok]
                                          else if (f1)
                                               then alexError "String not closed at end of file"
                                               else alexError "Comment not closed at end of file"
                               else do toks <- loop
                                       return (tok : toks)
              in  runAlex str loop


-- we capture the error message in order to complement it with the file position
alexComplementError :: Alex a -> Alex (a, Maybe String)
alexComplementError (Alex al) = Alex (\s -> case al s of
                                                 Right (s', x) -> Right (s', (x, Nothing))
                                                 Left  message -> Right (s, (undefined, Just message)))


lexer :: (Lexeme -> Alex a) -> Alex a
lexer cont =
    do t <- lexToken
       setParserCurrentToken t  -- helps in producing informative error messages
       cont t


lexToken :: Alex Lexeme
lexToken =
    do
       inp <- alexGetInput
       sc <- alexGetStartCode
       case alexScan inp sc of
            AlexEOF              -> alexEOF
            AlexError _          -> alexError "lexical error"
            AlexSkip  inp1 _     -> do
                                       alexSetInput inp1
                                       lexToken
            AlexToken inp1 len t -> do
                                       alexSetInput inp1
                                       t inp len
lexerError :: String -> Alex a
lexerError msg =
    do (p, c, _, inp) <- alexGetInput
       let inp1 = filter (/= '\r') (takeWhile (/='\n') inp)
       let inp2 = if (length inp1 > 30)
                     then trim (take 30 inp1)
                     else trim inp1
       let disp = if (null inp)
                     then " at end of file"
                     else if (null inp2)
                             then " before end of line\n"
                             else " on char " ++ show c ++ " before : '" ++ inp2 ++ "'\n"
       let disp3 = if (null msg)
                      then "Lexer error"
                      else trim msg
       alexError (disp3 ++ "\n at " ++ showPosn p ++ disp)
  where
    trim = reverse . dropWhile (== ' ') . reverse . dropWhile (== ' ')

type Action = AlexInput -> Int -> Alex Lexeme
-- used by the parser: run lexer, parser & get the symbol table
runAlexTable :: String -> Alex a -> Either String (a, Map String Int)
runAlexTable input (Alex f)
   = case f (AlexState { alex_pos = alexStartPos
                       , alex_inp = input
                       , alex_chr = '\n'
                       , alex_scd = 0
                       , alex_ust = alexInitUserState }) of
            Left msg      -> Left msg
            Right (st, a) -> Right (a, parserCollIdent (alex_ust st))
data Flag
     =
       Reject
        deriving (Show, Eq)
options :: [OptDescr Flag]
options =
    [
    ]
execOpts :: IO ([Flag], [String])
execOpts =
    do argv <- getArgs
       progName <- getProgName
       let header = "Usage: " ++ progName ++ " [options...] \"file name\""
       case (getOpt Permute options argv) of
            (o, n, []  ) -> if ((Reject `elem` o) || (length n /= 1))
                           then error (usageInfo header options)
                           else return (o, n)
            (_, _, errs) -> error (concat errs ++ usageInfo header options)

main_Lexer :: IO ()
main_Lexer =
    do (_, fileList) <- execOpts
       let filename = head fileList
       flag <- doesFileExist filename
       when (not flag) (error ("The following file does not exist : " ++ filename))
       putStrLn ("Beginning Scanning of the Quack program in file " ++ head fileList)
       s <- readFile filename
       let sr = scanner s
       case sr of
            Left st  -> error st
            Right ls -> putStrLn (show ls)


state_comment_1,state_comment_2,state_string1,state_string2 :: Int
state_comment_1 = 1
state_comment_2 = 2
state_string1 = 3
state_string2 = 4
alex_action_0 =  enterNewComment1 `andBegin` state_comment_1 
alex_action_1 =  leaveComment `andBegin` state_initial 
alex_action_3 =  skip 
alex_action_4 =  enterNewComment2 `andBegin` state_comment_2 
alex_action_5 =  leaveComment `andBegin` state_initial 
alex_action_8 =  enterNewString `andBegin` state_string2 
alex_action_9 =  addCharToString '\n' 
alex_action_10 =  addCharToString '\t' 
alex_action_11 =  addControlToString 
alex_action_12 =  addAsciiToString 
alex_action_13 =  leaveString `andBegin` state_initial 
alex_action_14 =  addCharToString '\"' 
alex_action_15 =  addCharToString '\'' 
alex_action_16 =  addCharToString '\\' 
alex_action_17 =  \_ _ -> lexerError "Illegal escape sequence" 
alex_action_19 =  leaveString `andBegin` state_initial 
alex_action_20 =  addCurrentToString 
alex_action_21 =  skip 
alex_action_22 =  enterNewString `andBegin` state_string1
alex_action_23 =  addCharToString '\n' 
alex_action_24 =  addCharToString '\t' 
alex_action_25 =  addControlToString 
alex_action_26 =  addAsciiToString 
alex_action_27 =  addCharToString '\"' 
alex_action_28 =  \_ _ -> lexerError "Illegal escape sequence" 
alex_action_29 =  addCharToString '\\' 
alex_action_30 =  \_ _ -> lexerError "Illegal escape sequence" 
alex_action_32 =  leaveString `andBegin` state_initial 
alex_action_33 =  addCurrentToString 
alex_action_34 =  \_ _ -> lexerError "String must be finished in one line " 
alex_action_35 = mkL CLASS
alex_action_36 = mkL DEF
alex_action_37 = mkL EXTENDS
alex_action_38 = mkL IF
alex_action_39 = mkL ELIF
alex_action_40 = mkL ELSE
alex_action_41 = mkL WHILE
alex_action_42 = mkL RETURN
alex_action_43 = mkL TYPECASE
alex_action_44 = mkL AND
alex_action_45 = mkL OR
alex_action_46 = mkL NOT
alex_action_47 = mkL NONE
alex_action_48 = mkL PLUS
alex_action_49 = mkL MINUS
alex_action_50 = mkL TIMES
alex_action_51 = mkL DIVIDE
alex_action_52 = mkL GETS
alex_action_53 = mkL EQUALS
alex_action_54 = mkL ATMOST
alex_action_55 = mkL LESS
alex_action_56 = mkL ATLEAST
alex_action_57 = mkL MORE
alex_action_58 = mkL LBRACE
alex_action_59 = mkL RBRACE
alex_action_60 = mkL LPAREN
alex_action_61 = mkL RPAREN
alex_action_62 = mkL COMMA
alex_action_63 = mkL SEMICOLON
alex_action_64 = mkL DOT
alex_action_65 = mkL COLON
alex_action_66 =  \_ _ -> lexerError "Unexpected character" 
alex_action_67 = getVariable
alex_action_68 = getInteger
alex_action_69 =  skip 
alex_action_70 =  skip 
{-# LINE 1 "templates/GenericTemplate.hs" #-}
-- -----------------------------------------------------------------------------
-- ALEX TEMPLATE
--
-- This code is in the PUBLIC DOMAIN; you may copy it freely and use
-- it for any purpose whatsoever.

-- -----------------------------------------------------------------------------
-- INTERNALS and main scanner engine































































alexIndexInt16OffAddr arr off = arr ! off




















alexIndexInt32OffAddr arr off = arr ! off











quickIndex arr i = arr ! i


-- -----------------------------------------------------------------------------
-- Main lexing routines

data AlexReturn a
  = AlexEOF
  | AlexError  !AlexInput
  | AlexSkip   !AlexInput !Int
  | AlexToken  !AlexInput !Int a

-- alexScan :: AlexInput -> StartCode -> AlexReturn a
alexScan input__ (sc)
  = alexScanUser undefined input__ (sc)

alexScanUser user__ input__ (sc)
  = case alex_scan_tkn user__ input__ (0) input__ sc AlexNone of
  (AlexNone, input__') ->
    case alexGetByte input__ of
      Nothing ->



                                   AlexEOF
      Just _ ->



                                   AlexError input__'

  (AlexLastSkip input__'' len, _) ->



    AlexSkip input__'' len

  (AlexLastAcc k input__''' len, _) ->



    AlexToken input__''' len (alex_actions ! k)


-- Push the input through the DFA, remembering the most recent accepting
-- state it encountered.

alex_scan_tkn user__ orig_input len input__ s last_acc =
  input__ `seq` -- strict in the input
  let
  new_acc = (check_accs (alex_accept `quickIndex` (s)))
  in
  new_acc `seq`
  case alexGetByte input__ of
     Nothing -> (new_acc, input__)
     Just (c, new_input) ->



      case fromIntegral c of { (ord_c) ->
        let
                base   = alexIndexInt32OffAddr alex_base s
                offset = (base + ord_c)
                check  = alexIndexInt16OffAddr alex_check offset

                new_s = if (offset >= (0)) && (check == ord_c)
                          then alexIndexInt16OffAddr alex_table offset
                          else alexIndexInt16OffAddr alex_deflt s
        in
        case new_s of
            (-1) -> (new_acc, input__)
                -- on an error, we want to keep the input *before* the
                -- character that failed, not after.
            _ -> alex_scan_tkn user__ orig_input (if c < 0x80 || c >= 0xC0 then (len + (1)) else len)
                                                -- note that the length is increased ONLY if this is the 1st byte in a char encoding)
                        new_input new_s new_acc
      }
  where
        check_accs (AlexAccNone) = last_acc
        check_accs (AlexAcc a  ) = AlexLastAcc a input__ (len)
        check_accs (AlexAccSkip) = AlexLastSkip  input__ (len)

        check_accs (AlexAccPred a predx rest)
           | predx user__ orig_input (len) input__
           = AlexLastAcc a input__ (len)
           | otherwise
           = check_accs rest
        check_accs (AlexAccSkipPred predx rest)
           | predx user__ orig_input (len) input__
           = AlexLastSkip input__ (len)
           | otherwise
           = check_accs rest


data AlexLastAcc
  = AlexNone
  | AlexLastAcc !Int !AlexInput !Int
  | AlexLastSkip     !AlexInput !Int

data AlexAcc user
  = AlexAccNone
  | AlexAcc Int
  | AlexAccSkip

  | AlexAccPred Int (AlexAccPred user) (AlexAcc user)
  | AlexAccSkipPred (AlexAccPred user) (AlexAcc user)

type AlexAccPred user = user -> AlexInput -> Int -> AlexInput -> Bool

-- -----------------------------------------------------------------------------
-- Predicates on a rule

alexAndPred p1 p2 user__ in1 len in2
  = p1 user__ in1 len in2 && p2 user__ in1 len in2

--alexPrevCharIsPred :: Char -> AlexAccPred _
alexPrevCharIs c _ input__ _ _ = c == alexInputPrevChar input__

alexPrevCharMatches f _ input__ _ _ = f (alexInputPrevChar input__)

--alexPrevCharIsOneOfPred :: Array Char Bool -> AlexAccPred _
alexPrevCharIsOneOf arr _ input__ _ _ = arr ! alexInputPrevChar input__

--alexRightContext :: Int -> AlexAccPred _
alexRightContext (sc) user__ _ _ input__ =
     case alex_scan_tkn user__ input__ (0) input__ sc AlexNone of
          (AlexNone, _) -> False
          _ -> True
        -- TODO: there's no need to find the longest
        -- match when checking the right context, just
        -- the first match will do.

