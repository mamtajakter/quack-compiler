{-# OPTIONS_GHC -fno-warn-unused-binds -fno-warn-missing-signatures #-}
{-# LANGUAGE CPP #-}
{-# LINE 1 "src/Parser/Lexer/QuackLexer.x" #-}


{-# OPTIONS -w -funbox-strict-fields #-}

module Parser.Lexer.QuackLexer ( mainLexer
                  , lexer, Lexeme (..), LexemeClass (..)
                  , Alex, getParserCurrentToken
                  , alexError, runAlex, runAlexTable, alexGetInput, scanner
                  , Flag (..), options, execOpts, error', showPosn
                  ) where

import Prelude hiding ( GT, LT, EQ )
import System.Console.GetOpt ( OptDescr(..), ArgOrder(..), getOpt, usageInfo )
import System.Environment ( getArgs, getProgName )
import System.Directory ( doesFileExist )
import Control.Monad
import Data.Maybe
import Numeric ( readDec )
import Data.Char ( chr )
import Data.Map ( Map )
import Data.IORef (readIORef, newIORef, writeIORef)
import qualified Data.Map as Map ( empty )


#if __GLASGOW_HASKELL__ >= 603
#include "ghcconfig.h"
#elif defined(__GLASGOW_HASKELL__)
#include "config.h"
#endif
#if __GLASGOW_HASKELL__ >= 503
import Data.Array
import Data.Array.Base (unsafeAt)
#else
import Array
#endif
{-# LINE 1 "templates/wrappers.hs" #-}
-- -----------------------------------------------------------------------------
-- Alex wrapper code.
--
-- This code is in the PUBLIC DOMAIN; you may copy it freely and use
-- it for any purpose whatsoever.


import Control.Applicative as App (Applicative (..))
import qualified Control.Monad (ap)


import Data.Word (Word8)
















import Data.Char (ord)
import qualified Data.Bits

-- | Encode a Haskell String to a list of Word8 values, in UTF8 format.
utf8Encode :: Char -> [Word8]
utf8Encode = map fromIntegral . go . ord
 where
  go oc
   | oc <= 0x7f       = [oc]

   | oc <= 0x7ff      = [ 0xc0 + (oc `Data.Bits.shiftR` 6)
                        , 0x80 + oc Data.Bits..&. 0x3f
                        ]

   | oc <= 0xffff     = [ 0xe0 + (oc `Data.Bits.shiftR` 12)
                        , 0x80 + ((oc `Data.Bits.shiftR` 6) Data.Bits..&. 0x3f)
                        , 0x80 + oc Data.Bits..&. 0x3f
                        ]
   | otherwise        = [ 0xf0 + (oc `Data.Bits.shiftR` 18)
                        , 0x80 + ((oc `Data.Bits.shiftR` 12) Data.Bits..&. 0x3f)
                        , 0x80 + ((oc `Data.Bits.shiftR` 6) Data.Bits..&. 0x3f)
                        , 0x80 + oc Data.Bits..&. 0x3f
                        ]



type Byte = Word8

-- -----------------------------------------------------------------------------
-- The input type


type AlexInput = (AlexPosn,     -- current position,
                  Char,         -- previous char
                  [Byte],       -- pending bytes on current char
                  String)       -- current input string

ignorePendingBytes :: AlexInput -> AlexInput
ignorePendingBytes (p,c,_ps,s) = (p,c,[],s)

alexInputPrevChar :: AlexInput -> Char
alexInputPrevChar (_p,c,_bs,_s) = c

alexGetByte :: AlexInput -> Maybe (Byte,AlexInput)
alexGetByte (p,c,(b:bs),s) = Just (b,(p,c,bs,s))
alexGetByte (_,_,[],[]) = Nothing
alexGetByte (p,_,[],(c:s))  = let p' = alexMove p c
                                  (b:bs) = utf8Encode c
                              in p' `seq`  Just (b, (p', c, bs, s))





























































-- -----------------------------------------------------------------------------
-- Token positions

-- `Posn' records the location of a token in the input text.  It has three
-- fields: the address (number of chacaters preceding the token), line number
-- and column of a token within the file. `start_pos' gives the position of the
-- start of the file and `eof_pos' a standard encoding for the end of file.
-- `move_pos' calculates the new position after traversing a given character,
-- assuming the usual eight character tab stops.


data AlexPosn = AlexPn !Int !Int !Int
        deriving (Eq,Show)

alexStartPos :: AlexPosn
alexStartPos = AlexPn 0 1 1

alexMove :: AlexPosn -> Char -> AlexPosn
alexMove (AlexPn a l c) '\t' = AlexPn (a+1)  l     (((c+alex_tab_size-1) `div` alex_tab_size)*alex_tab_size+1)
alexMove (AlexPn a l _) '\n' = AlexPn (a+1) (l+1)   1
alexMove (AlexPn a l c) _    = AlexPn (a+1)  l     (c+1)


-- -----------------------------------------------------------------------------
-- Default monad


data AlexState = AlexState {
        alex_pos :: !AlexPosn,  -- position at current input location
        alex_inp :: String,     -- the current input
        alex_chr :: !Char,      -- the character before the input
        alex_bytes :: [Byte],
        alex_scd :: !Int        -- the current startcode

      , alex_ust :: AlexUserState -- AlexUserState will be defined in the user program

    }

-- Compile with -funbox-strict-fields for best results!

runAlex :: String -> Alex a -> Either String a
runAlex input__ (Alex f)
   = case f (AlexState {alex_pos = alexStartPos,
                        alex_inp = input__,
                        alex_chr = '\n',
                        alex_bytes = [],

                        alex_ust = alexInitUserState,

                        alex_scd = 0}) of Left msg -> Left msg
                                          Right ( _, a ) -> Right a

newtype Alex a = Alex { unAlex :: AlexState -> Either String (AlexState, a) }

instance Functor Alex where
  fmap f a = Alex $ \s -> case unAlex a s of
                            Left msg -> Left msg
                            Right (s', a') -> Right (s', f a')

instance Applicative Alex where
  pure a   = Alex $ \s -> Right (s, a)
  fa <*> a = Alex $ \s -> case unAlex fa s of
                            Left msg -> Left msg
                            Right (s', f) -> case unAlex a s' of
                                               Left msg -> Left msg
                                               Right (s'', b) -> Right (s'', f b)

instance Monad Alex where
  m >>= k  = Alex $ \s -> case unAlex m s of
                                Left msg -> Left msg
                                Right (s',a) -> unAlex (k a) s'
  return = App.pure

alexGetInput :: Alex AlexInput
alexGetInput
 = Alex $ \s@AlexState{alex_pos=pos,alex_chr=c,alex_bytes=bs,alex_inp=inp__} ->
        Right (s, (pos,c,bs,inp__))

alexSetInput :: AlexInput -> Alex ()
alexSetInput (pos,c,bs,inp__)
 = Alex $ \s -> case s{alex_pos=pos,alex_chr=c,alex_bytes=bs,alex_inp=inp__} of
                  state__@(AlexState{}) -> Right (state__, ())

alexError :: String -> Alex a
alexError message = Alex $ const $ Left message

alexGetStartCode :: Alex Int
alexGetStartCode = Alex $ \s@AlexState{alex_scd=sc} -> Right (s, sc)

alexSetStartCode :: Int -> Alex ()
alexSetStartCode sc = Alex $ \s -> Right (s{alex_scd=sc}, ())


alexGetUserState :: Alex AlexUserState
alexGetUserState = Alex $ \s@AlexState{alex_ust=ust} -> Right (s,ust)

alexSetUserState :: AlexUserState -> Alex ()
alexSetUserState ss = Alex $ \s -> Right (s{alex_ust=ss}, ())


alexMonadScan = do
  inp__ <- alexGetInput
  sc <- alexGetStartCode
  case alexScan inp__ sc of
    AlexEOF -> alexEOF
    AlexError ((AlexPn _ line column),_,_,_) -> alexError $ "lexical error at line " ++ (show line) ++ ", column " ++ (show column)
    AlexSkip  inp__' _len -> do
        alexSetInput inp__'
        alexMonadScan
    AlexToken inp__' len action -> do
        alexSetInput inp__'
        action (ignorePendingBytes inp__) len

-- -----------------------------------------------------------------------------
-- Useful token actions

type AlexAction result = AlexInput -> Int -> Alex result

-- just ignore this token and scan another one
-- skip :: AlexAction result
skip _input _len = alexMonadScan

-- ignore this token, but set the start code to a new value
-- begin :: Int -> AlexAction result
begin code _input _len = do alexSetStartCode code; alexMonadScan

-- perform an action for this token, and set the start code to a new value
andBegin :: AlexAction result -> Int -> AlexAction result
(action `andBegin` code) input__ len = do
  alexSetStartCode code
  action input__ len

token :: (AlexInput -> Int -> token) -> AlexAction token
token t input__ len = return (t input__ len)



-- -----------------------------------------------------------------------------
-- Monad (with ByteString input)







































































































-- -----------------------------------------------------------------------------
-- Basic wrapper

























-- -----------------------------------------------------------------------------
-- Basic wrapper, ByteString version
































-- -----------------------------------------------------------------------------
-- Posn wrapper

-- Adds text positions to the basic model.













-- -----------------------------------------------------------------------------
-- Posn wrapper, ByteString version














-- -----------------------------------------------------------------------------
-- GScan wrapper

-- For compatibility with previous versions of Alex, and because we can.














alex_tab_size :: Int
alex_tab_size = 8
alex_base :: Array Int Int
alex_base = listArray (0 :: Int, 139)
  [ -8
  , 13
  , 259
  , 505
  , 633
  , 761
  , 889
  , 1017
  , 1145
  , 1273
  , 1401
  , 1529
  , 0
  , 1642
  , 0
  , 1755
  , 0
  , 1868
  , 0
  , 1981
  , 0
  , 349
  , 0
  , 2046
  , 0
  , 2111
  , 0
  , 2176
  , -28
  , 2432
  , 2368
  , 0
  , -27
  , 2624
  , 2560
  , 0
  , 2816
  , 2752
  , 0
  , 3008
  , 2944
  , 0
  , -26
  , 0
  , 0
  , 0
  , 0
  , 0
  , -25
  , 0
  , 3190
  , 0
  , -38
  , 0
  , 0
  , 0
  , 255
  , 3153
  , 3398
  , 3473
  , 3548
  , 3623
  , 3698
  , 3773
  , 3848
  , 3923
  , 3998
  , 4073
  , 4148
  , 4223
  , 0
  , -51
  , 0
  , -50
  , -49
  , 0
  , -29
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -20
  , 0
  , 0
  , 0
  , 70
  , 4298
  , 4373
  , 4448
  , 4523
  , 4598
  , 4673
  , 4748
  , 4823
  , 4898
  , 4973
  , 5048
  , 5123
  , 5198
  , 5273
  , 5348
  , 5423
  , 5498
  , 5573
  , 5648
  , 5723
  , 5798
  , 5873
  , 5948
  , 6023
  , 6098
  , 6173
  , 6248
  , 6323
  , 6398
  , 6473
  , 6548
  , 6623
  , 6698
  , 6773
  , 6848
  , 6923
  , 6998
  , 7073
  , 7148
  , 7223
  , 7298
  , 7373
  , 7448
  , 7523
  , 7598
  ]

alex_table :: Array Int Int
alex_table = listArray (0 :: Int, 7853)
  [ 0
  , 93
  , 93
  , 93
  , 93
  , 93
  , 92
  , 88
  , 32
  , 55
  , 70
  , 72
  , 75
  , 51
  , 28
  , 0
  , 0
  , 0
  , 50
  , 45
  , 0
  , 46
  , 0
  , 54
  , 93
  , 0
  , 42
  , 0
  , 0
  , 0
  , 0
  , 0
  , 84
  , 83
  , 77
  , 79
  , 87
  , 78
  , 80
  , 76
  , 94
  , 94
  , 94
  , 94
  , 94
  , 94
  , 94
  , 94
  , 94
  , 94
  , 86
  , 85
  , 73
  , 74
  , 71
  , 52
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 115
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 126
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 44
  , 0
  , 119
  , 0
  , 129
  , 119
  , 124
  , 103
  , 127
  , 119
  , 119
  , 119
  , 138
  , 119
  , 119
  , 119
  , 119
  , 106
  , 135
  , 119
  , 119
  , 116
  , 119
  , 118
  , 119
  , 119
  , 123
  , 119
  , 119
  , 119
  , 82
  , 0
  , 81
  , 94
  , 94
  , 94
  , 94
  , 94
  , 94
  , 94
  , 94
  , 94
  , 94
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 33
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 34
  , 6
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 23
  , 10
  , 14
  , 14
  , 14
  , 15
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 49
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 43
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 48
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 39
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 40
  , 4
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 27
  , 8
  , 18
  , 18
  , 18
  , 19
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 91
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 90
  , 30
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 29
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 30
  , 7
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 21
  , 11
  , 12
  , 12
  , 12
  , 13
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 39
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 41
  , 36
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 33
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 35
  , 29
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 31
  , 4
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 26
  , 5
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 6
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 22
  , 7
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 20
  , 21
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 23
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 25
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 27
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 34
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 37
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 40
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 36
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 38
  , 37
  , 5
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 24
  , 25
  , 9
  , 16
  , 16
  , 16
  , 17
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 56
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 58
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 61
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 62
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 64
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 68
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 69
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 95
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 139
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 137
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 97
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 99
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 133
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 100
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 101
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 102
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 131
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 130
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 105
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 128
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 112
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 125
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 122
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 114
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 120
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 117
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 113
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 111
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 110
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 109
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 108
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 107
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 104
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 121
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 132
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 134
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 136
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 98
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 96
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 67
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 66
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 65
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 63
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 60
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 59
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 119
  , 0
  , 119
  , 119
  , 119
  , 119
  , 119
  , 57
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 119
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  ]

alex_check :: Array Int Int
alex_check = listArray (0 :: Int, 7853)
  [ -1
  , 9
  , 10
  , 11
  , 12
  , 13
  , 34
  , 34
  , 34
  , 47
  , 61
  , 61
  , 61
  , 42
  , 34
  , -1
  , -1
  , -1
  , 47
  , 44
  , -1
  , 46
  , -1
  , 10
  , 32
  , -1
  , 34
  , -1
  , -1
  , -1
  , -1
  , -1
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 42
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , 110
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , -1
  , 125
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 10
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 34
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , 92
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 10
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 34
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 10
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , -1
  , -1
  , -1
  , -1
  , 95
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  ]

alex_deflt :: Array Int Int
alex_deflt = listArray (0 :: Int, 139)
  [ -1
  , 53
  , 47
  , 89
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 20
  , 20
  , 22
  , 22
  , 24
  , 24
  , 26
  , 26
  , 31
  , 31
  , 35
  , 35
  , 38
  , 38
  , 41
  , 41
  , -1
  , 89
  , 89
  , 89
  , -1
  , 53
  , 53
  , 53
  , 50
  , 50
  , 50
  , 47
  , 47
  , 47
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 50
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  ]

alex_accept = listArray (0 :: Int, 139)
  [ AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAcc 93
  , AlexAcc 92
  , AlexAcc 91
  , AlexAcc 90
  , AlexAcc 89
  , AlexAcc 88
  , AlexAcc 87
  , AlexAcc 86
  , AlexAccSkip
  , AlexAcc 85
  , AlexAccSkip
  , AlexAccSkip
  , AlexAcc 84
  , AlexAcc 83
  , AlexAcc 82
  , AlexAcc 81
  , AlexAcc 80
  , AlexAcc 79
  , AlexAcc 78
  , AlexAcc 77
  , AlexAcc 76
  , AlexAcc 75
  , AlexAcc 74
  , AlexAcc 73
  , AlexAcc 72
  , AlexAcc 71
  , AlexAcc 70
  , AlexAcc 69
  , AlexAcc 68
  , AlexAcc 67
  , AlexAcc 66
  , AlexAcc 65
  , AlexAcc 64
  , AlexAcc 63
  , AlexAcc 62
  , AlexAcc 61
  , AlexAcc 60
  , AlexAcc 59
  , AlexAcc 58
  , AlexAcc 57
  , AlexAcc 56
  , AlexAcc 55
  , AlexAcc 54
  , AlexAcc 53
  , AlexAcc 52
  , AlexAcc 51
  , AlexAcc 50
  , AlexAcc 49
  , AlexAcc 48
  , AlexAcc 47
  , AlexAcc 46
  , AlexAccSkip
  , AlexAcc 45
  , AlexAcc 44
  , AlexAcc 43
  , AlexAcc 42
  , AlexAcc 41
  , AlexAcc 40
  , AlexAcc 39
  , AlexAcc 38
  , AlexAcc 37
  , AlexAcc 36
  , AlexAcc 35
  , AlexAcc 34
  , AlexAcc 33
  , AlexAcc 32
  , AlexAcc 31
  , AlexAcc 30
  , AlexAcc 29
  , AlexAcc 28
  , AlexAcc 27
  , AlexAcc 26
  , AlexAcc 25
  , AlexAcc 24
  , AlexAcc 23
  , AlexAcc 22
  , AlexAcc 21
  , AlexAcc 20
  , AlexAcc 19
  , AlexAcc 18
  , AlexAcc 17
  , AlexAcc 16
  , AlexAcc 15
  , AlexAcc 14
  , AlexAcc 13
  , AlexAcc 12
  , AlexAcc 11
  , AlexAcc 10
  , AlexAcc 9
  , AlexAcc 8
  , AlexAcc 7
  , AlexAcc 6
  , AlexAcc 5
  , AlexAcc 4
  , AlexAcc 3
  , AlexAcc 2
  , AlexAcc 1
  , AlexAcc 0
  ]

alex_actions = array (0 :: Int, 94)
  [ (93,alex_action_0)
  , (92,alex_action_1)
  , (91,alex_action_2)
  , (90,alex_action_3)
  , (89,alex_action_4)
  , (88,alex_action_5)
  , (87,alex_action_5)
  , (86,alex_action_6)
  , (85,alex_action_9)
  , (84,alex_action_11)
  , (83,alex_action_12)
  , (82,alex_action_13)
  , (81,alex_action_14)
  , (80,alex_action_15)
  , (79,alex_action_16)
  , (78,alex_action_17)
  , (77,alex_action_18)
  , (76,alex_action_19)
  , (75,alex_action_20)
  , (74,alex_action_21)
  , (73,alex_action_22)
  , (72,alex_action_23)
  , (71,alex_action_24)
  , (70,alex_action_25)
  , (69,alex_action_26)
  , (68,alex_action_27)
  , (67,alex_action_28)
  , (66,alex_action_29)
  , (65,alex_action_30)
  , (64,alex_action_31)
  , (63,alex_action_32)
  , (62,alex_action_33)
  , (61,alex_action_34)
  , (60,alex_action_35)
  , (59,alex_action_36)
  , (58,alex_action_37)
  , (57,alex_action_38)
  , (56,alex_action_39)
  , (55,alex_action_40)
  , (54,alex_action_41)
  , (53,alex_action_42)
  , (52,alex_action_43)
  , (51,alex_action_44)
  , (50,alex_action_45)
  , (49,alex_action_46)
  , (48,alex_action_46)
  , (47,alex_action_47)
  , (46,alex_action_49)
  , (45,alex_action_51)
  , (44,alex_action_52)
  , (43,alex_action_52)
  , (42,alex_action_52)
  , (41,alex_action_52)
  , (40,alex_action_52)
  , (39,alex_action_52)
  , (38,alex_action_52)
  , (37,alex_action_52)
  , (36,alex_action_52)
  , (35,alex_action_52)
  , (34,alex_action_52)
  , (33,alex_action_52)
  , (32,alex_action_52)
  , (31,alex_action_52)
  , (30,alex_action_52)
  , (29,alex_action_52)
  , (28,alex_action_52)
  , (27,alex_action_52)
  , (26,alex_action_52)
  , (25,alex_action_52)
  , (24,alex_action_52)
  , (23,alex_action_52)
  , (22,alex_action_52)
  , (21,alex_action_52)
  , (20,alex_action_52)
  , (19,alex_action_52)
  , (18,alex_action_52)
  , (17,alex_action_52)
  , (16,alex_action_52)
  , (15,alex_action_52)
  , (14,alex_action_52)
  , (13,alex_action_52)
  , (12,alex_action_52)
  , (11,alex_action_52)
  , (10,alex_action_52)
  , (9,alex_action_52)
  , (8,alex_action_52)
  , (7,alex_action_52)
  , (6,alex_action_52)
  , (5,alex_action_52)
  , (4,alex_action_52)
  , (3,alex_action_52)
  , (2,alex_action_52)
  , (1,alex_action_52)
  , (0,alex_action_52)
  ]

{-# LINE 116 "src/Parser/Lexer/QuackLexer.x" #-}



data Lexeme = Lexeme LexemeClass AlexPosn (Maybe String)

mkL :: LexemeClass -> AlexInput -> Int -> Alex Lexeme
mkL c (p,_,_,str) len = return (Lexeme c p (Just (take len str)))

data LexemeClass =
           EOF
           | LID         String
           | LINT        Int
           | LSTRING     String
           | LCLASS
           | LDEF
           | LEXTENDS
           | LIF
           | LELIF
           | LELSE
           | LWHILE
           | LRETURN
           | LTYPECASE
           -- | LRESERVEDID
           -- | LRESERVEDOP
           | LOR
           | LGE
           | LGT
           | LLE
           | LLT
           | LLEQ
           | LEQUALS
           | LAND
           | LNOT
           | LDIVIDE
           | LTIMES
           | LMINUS
           | LPLUS
           | LDOT
           | LBRACER
           | LBRACEL
           | LPARENL
           | LPARENR
           | LSEMICOLON
           | LCOLON
           | LCOMMA
           | LFALSE
           | LTRUE
           deriving (Show, Eq)

instance Show Lexeme where
  show (Lexeme EOF _ _)   = "Lexeme EOF"
  show (Lexeme cl  p mbs) = "Lexeme class=" ++ show cl ++ " " ++ showPosn p ++ " " ++ showst mbs ++ " "
    where
      showst Nothing  = ""
      showst (Just s) = " string=" ++ "\'" ++ s ++ "\'"


-- The user state monad
data AlexUserState = AlexUserState
                   {
                     -- used by the lexer phase
                       lexerCommentState1  :: Bool
                     , lexerCommentState2  :: Bool
                     , lexerStringState1   :: Bool
                     , lexerStringState2   :: Bool
                     , lexerStringValue   :: String
                     -- used by the parser phase
                     , parserCurrentToken :: Lexeme
                   }
alexInitUserState :: AlexUserState
alexInitUserState = AlexUserState
                   {
                   -- used by the lexer phase
                       lexerCommentState1  = False
                     , lexerCommentState2  = False
                     , lexerStringState1   = False
                     , lexerStringState2   = False
                     , lexerStringValue   = ""
                     -- used by the parse phase
                     , parserCurrentToken = Lexeme EOF undefined Nothing
                   }

initial_state :: Int
initial_state = 0



enterNewComment1 _ _ = do
  setLexerCommentState1 True
  alexMonadScan

enterNewComment2 _ _ = do
  setLexerCommentState2 True
  alexMonadScan

leaveComment1 (_, _, _, input) len =
   do
      setLexerCommentState1 False
      alexMonadScan

leaveComment2 (_, _, _, input) len =
   do
      setLexerCommentState2 False
      alexMonadScan



setLexerCommentState1 :: Bool -> Alex ()
setLexerCommentState1 b = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerCommentState1=b}}, ())


setLexerCommentState2 :: Bool -> Alex ()
setLexerCommentState2 b = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerCommentState2=b}}, ())


getLexerCommentState1 :: Alex Bool
getLexerCommentState1 = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, lexerCommentState1 ust)

getLexerCommentState2 :: Alex Bool
getLexerCommentState2 = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, lexerStringState2 ust)

enterNewString1 _     _   =
    do setLexerStringState1 True
       setLexerStringValue ""
       alexMonadScan

leaveString1 (p, _, _, input) len =
   do s <- getLexerStringValue1
      setLexerStringState1 False
      return (Lexeme (LSTRING (reverse s)) p (Just (take len input)))

enterNewString2 _     _   =
   do setLexerStringState2 True
      setLexerStringValue ""
      alexMonadScan

leaveString2 (p, _, _, input) len =
   do s <- getLexerStringValue2
      setLexerStringState2 False
      return (Lexeme (LSTRING (reverse s)) p (Just (take len input)))


getLexerStringValue1 :: Alex String
getLexerStringValue1 = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, lexerStringValue ust)

getLexerStringValue2 :: Alex String
getLexerStringValue2 = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, lexerStringValue ust)

setLexerStringValue1 :: String -> Alex ()
setLexerStringValue1 ss = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerStringValue=ss}}, ())

setLexerStringValue :: String -> Alex ()
setLexerStringValue ss = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerStringValue=ss}}, ())


setLexerStringState1 :: Bool -> Alex ()
setLexerStringState1 b = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerStringState1=b}}, ())

setLexerStringState2 :: Bool -> Alex ()
setLexerStringState2 b = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerStringState2=b}}, ())


getLexerStringState1 :: Alex Bool
getLexerStringState1 = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, lexerStringState1 ust)


getLexerStringState2 :: Alex Bool
getLexerStringState2 = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, lexerStringState2 ust)

addCharToLexerStringValue :: Char -> Alex ()
addCharToLexerStringValue c = Alex $ \s -> Right (s{alex_ust=(alex_ust s){lexerStringValue=c:lexerStringValue (alex_ust s)}}, ())


addCharToString :: Char -> Action
addCharToString c _ _ =
   do addCharToLexerStringValue c
      alexMonadScan

addCurrentToString i@(_, _, _, input) len = addCharToString c i len
  where
    c = if (len == 1)
           then head input
           else error "Invalid call to addCurrentToString''"

getInteger (p, _, _, input) len = if (length r == 1)
                                  then return (Lexeme (LINT (fst (head r))) p (Just s))
                                  else lexerError "Invalid number"
  where
    s = take len input
    r = readDec s

-- a sequence of letters is an identifier, except for reserved words, which are tested for beforehand
getVariable (p, _, _, input) len = return (Lexeme (LID s) p (Just s))
  where
    s = take len input



setParserCurrentToken :: Lexeme -> Alex ()
setParserCurrentToken ss = Alex $ \s -> Right (s{alex_ust=(alex_ust s){parserCurrentToken=ss}}, ())


getParserCurrentToken :: Alex Lexeme
getParserCurrentToken = Alex $ \s@AlexState{alex_ust=ust} -> Right (s, parserCurrentToken ust)


-- definition needed by Alex
alexEOF :: Alex Lexeme
alexEOF = return (Lexeme EOF undefined Nothing)

scanner' :: Either String [Lexeme] -> [Either String Lexeme] -> [Either String Lexeme]
scanner' e@(Left s) [] = [Left s]
scanner' e@(Left s) l@(x:xs) = l ++ [Left s]
scanner' e@(Right lexlist) [] = map (\lex -> Right lex) lexlist
scanner' e@(Right lexlist) l@(x:xs) = l ++ (map (\lex -> Right lex) lexlist)

-- Execution
scanner :: String -> Either String [Lexeme]
scanner str = let loop = do
                          (t, m) <- alexComplementError alexMonadScan
                          when (isJust m) (lexerError (fromJust m))
                          let tok@(Lexeme cl _ _) = t
                          if (cl == EOF)
                                  then do
                                        f1 <- getLexerStringState1
                                        f2 <- getLexerStringState2
                                        d2 <- getLexerCommentState2
                                        if ((not f1) && (not f2) && (not d2))
                                         then return [tok]
                                          else if (f1)
                                              then alexError "Simple String not closed at end of file"
                                                else if (f2)
                                                 then alexError "Complex String not closed at end of file"
                                                  else alexError "Multiline comment not closed at end of file"
                                else do
                                       toks <- loop
                                       return (tok : toks)
            in  runAlex str loop

{- scanner :: String -> Either String [Lexeme]
scanner str = let loop = do
                          (t, m) <- alexComplementError alexMonadScan
                          when (isJust m) (lexerError (fromJust m))
                          let tok@(Lexeme cl _ _) = t
                          if (cl == EOF)
                                  then do
                                        f1 <- getLexerStringState1
                                        f2 <- getLexerStringState2
                                        d2 <- getLexerCommentState2
                                        if ((not f1) && (not f2) && (not d2))
                                         then return [tok]
                                          else if (f1)
                                              then alexError "Simple String not closed at end of file"
                                                else if (f2)
                                                 then alexError "Complex String not closed at end of file"
                                                  else alexError "Multiline comment not closed at end of file"
                                else do
                                       toks <- loop
                                       return (tok : toks)
            in  runAlex str loop -}



-- we capture the error message in order to complement it with the file position
alexComplementError :: Alex a -> Alex (a, Maybe String)
alexComplementError (Alex al) = Alex (\s -> case al s of
                                               Right (s', x) -> Right (s', (x, Nothing))
                                               Left  message -> Right (s, (undefined, Just message)))
lexer :: (Lexeme -> Alex a) -> Alex a
lexer cont =
  do t <- lexToken
     setParserCurrentToken t  -- helps in producing informative error messages
     cont t

lexToken :: Alex Lexeme
lexToken =
  do
     inp <- alexGetInput
     sc <- alexGetStartCode
     case alexScan inp sc of
          AlexEOF              -> alexEOF
          AlexError _          -> alexError "lexical error"
          AlexSkip  inp1 _     -> do
                                     alexSetInput inp1
                                     lexToken
          AlexToken inp1 len t -> do
                                     alexSetInput inp1
                                     t inp len

showPosn :: AlexPosn -> String
showPosn (AlexPn _ line col) = " Line " ++ show line ++ ", Column " ++ show col

lexerError :: String -> Alex a
lexerError msg =
  do (p, c, _, inp) <- alexGetInput
     let inp1 = filter (/= '\r') (takeWhile (/='\n') inp)
     let inp2 = if (length inp1 > 30)
                   then trim (take 30 inp1)
                   else trim inp1
     let disp = if (null inp)
                   then " at end of file"
                   else if (null inp2)
                           then " before end of line"
                           else " on char " ++ show c ++ " before : '" ++ inp2 ++ "'"
     let disp3 = if (null msg)
                    then "Lexer error"
                    else trim msg
     alexError (disp3 ++ " at " ++ showPosn p ++ disp)
  where
   trim = reverse . dropWhile (== ' ') . reverse . dropWhile (== ' ')



type Action = AlexInput -> Int -> Alex Lexeme
-- used by the parser: run lexer, parser & get the symbol table
runAlexTable :: String -> Alex a -> Either String a
runAlexTable input (Alex f)
 = case f (AlexState { alex_pos = alexStartPos
                     , alex_inp = input
                     , alex_chr = '\n'
                     , alex_scd = 0
                     , alex_ust = alexInitUserState }) of
          Left msg      -> Left msg
          Right (st, a) -> Right a


data Flag
   =
     Reject
      deriving (Show, Eq)
options :: [OptDescr Flag]
options =
  [
  ]
execOpts :: IO ([Flag], [String])
execOpts =
  do argv <- getArgs
     progName <- getProgName
     let header = "Usage: " ++ progName ++ " [options...] \"file name\""
     case (getOpt Permute options argv) of
          (o, n, []  ) -> if ((Reject `elem` o) || (length n /= 1))
                         then error (usageInfo header options)
                         else return (o, n)
          (_, _, errs) -> error (concat errs ++ usageInfo header options)


error' = error


mainLexer :: String ->  IO [Either String Lexeme]
mainLexer filename =
  do
     flag <- doesFileExist filename
     when (not flag) (error ("The following file does not exist : " ++ filename))
     putStrLn ("Beginning analysis of the Quack program in file " ++ filename)
     s <- readFile filename
     let sr = scanner s
     let sr' = scanner' sr []
     return sr'
     -- putStrLn $ unlines $ map show sr' --putStrLn (show ls)


state_comment_2,state_string_1,state_string_2 :: Int
state_comment_2 = 1
state_string_1 = 2
state_string_2 = 3
alex_action_0 =  enterNewString1 `andBegin` state_string_1 
alex_action_1 =  leaveString1 `andBegin` initial_state 
alex_action_2 = addCharToString '\n' 
alex_action_3 = \_ _ -> lexerError "Illegal escape sequence"
alex_action_4 = \_ _ -> lexerError "Illegal escape sequence" 
alex_action_5 = addCurrentToString
alex_action_6 = \_ _ -> lexerError "Illegal escape sequence"
alex_action_9 = enterNewComment2 `andBegin` state_comment_2
alex_action_11 = skip
alex_action_12 = leaveComment2 `andBegin` initial_state
alex_action_13 =  mkL LCLASS 
alex_action_14 =  mkL LDEF 
alex_action_15 =  mkL LEXTENDS 
alex_action_16 =  mkL LIF
alex_action_17 =  mkL LELIF 
alex_action_18 =  mkL LELSE 
alex_action_19 =  mkL LWHILE 
alex_action_20 =  mkL LRETURN 
alex_action_21 =  mkL LTYPECASE 
alex_action_22 =  mkL LOR 
alex_action_23 =  mkL LAND 
alex_action_24 =  mkL LNOT 
alex_action_25 =  mkL LTRUE 
alex_action_26 =  mkL LFALSE 
alex_action_27 =  mkL LGE 
alex_action_28 =  mkL LGT 
alex_action_29 =  mkL LLE 
alex_action_30 =  mkL LLT 
alex_action_31 =  mkL LLEQ 
alex_action_32 =  mkL LEQUALS 
alex_action_33 =  mkL LDIVIDE 
alex_action_34 =  mkL LTIMES 
alex_action_35 =  mkL LMINUS 
alex_action_36 =  mkL LPLUS 
alex_action_37 =  mkL LDOT 
alex_action_38 =  mkL LBRACER 
alex_action_39 =  mkL LBRACEL 
alex_action_40 =  mkL LPARENR 
alex_action_41 =  mkL LPARENL 
alex_action_42 =  mkL LSEMICOLON 
alex_action_43 =  mkL LCOLON 
alex_action_44 =  mkL LCOMMA 
alex_action_45 =  enterNewString2 `andBegin` state_string_2
alex_action_46 = addCurrentToString
alex_action_47 = addCharToString '\n'
alex_action_49 =  leaveString2 `andBegin` initial_state 
alex_action_51 =  getInteger 
alex_action_52 =  getVariable 
{-# LINE 1 "templates/GenericTemplate.hs" #-}
-- -----------------------------------------------------------------------------
-- ALEX TEMPLATE
--
-- This code is in the PUBLIC DOMAIN; you may copy it freely and use
-- it for any purpose whatsoever.

-- -----------------------------------------------------------------------------
-- INTERNALS and main scanner engine































































alexIndexInt16OffAddr arr off = arr ! off




















alexIndexInt32OffAddr arr off = arr ! off











quickIndex arr i = arr ! i


-- -----------------------------------------------------------------------------
-- Main lexing routines

data AlexReturn a
  = AlexEOF
  | AlexError  !AlexInput
  | AlexSkip   !AlexInput !Int
  | AlexToken  !AlexInput !Int a

-- alexScan :: AlexInput -> StartCode -> AlexReturn a
alexScan input__ (sc)
  = alexScanUser undefined input__ (sc)

alexScanUser user__ input__ (sc)
  = case alex_scan_tkn user__ input__ (0) input__ sc AlexNone of
  (AlexNone, input__') ->
    case alexGetByte input__ of
      Nothing ->



                                   AlexEOF
      Just _ ->



                                   AlexError input__'

  (AlexLastSkip input__'' len, _) ->



    AlexSkip input__'' len

  (AlexLastAcc k input__''' len, _) ->



    AlexToken input__''' len (alex_actions ! k)


-- Push the input through the DFA, remembering the most recent accepting
-- state it encountered.

alex_scan_tkn user__ orig_input len input__ s last_acc =
  input__ `seq` -- strict in the input
  let
  new_acc = (check_accs (alex_accept `quickIndex` (s)))
  in
  new_acc `seq`
  case alexGetByte input__ of
     Nothing -> (new_acc, input__)
     Just (c, new_input) ->



      case fromIntegral c of { (ord_c) ->
        let
                base   = alexIndexInt32OffAddr alex_base s
                offset = (base + ord_c)
                check  = alexIndexInt16OffAddr alex_check offset

                new_s = if (offset >= (0)) && (check == ord_c)
                          then alexIndexInt16OffAddr alex_table offset
                          else alexIndexInt16OffAddr alex_deflt s
        in
        case new_s of
            (-1) -> (new_acc, input__)
                -- on an error, we want to keep the input *before* the
                -- character that failed, not after.
            _ -> alex_scan_tkn user__ orig_input (if c < 0x80 || c >= 0xC0 then (len + (1)) else len)
                                                -- note that the length is increased ONLY if this is the 1st byte in a char encoding)
                        new_input new_s new_acc
      }
  where
        check_accs (AlexAccNone) = last_acc
        check_accs (AlexAcc a  ) = AlexLastAcc a input__ (len)
        check_accs (AlexAccSkip) = AlexLastSkip  input__ (len)

        check_accs (AlexAccPred a predx rest)
           | predx user__ orig_input (len) input__
           = AlexLastAcc a input__ (len)
           | otherwise
           = check_accs rest
        check_accs (AlexAccSkipPred predx rest)
           | predx user__ orig_input (len) input__
           = AlexLastSkip input__ (len)
           | otherwise
           = check_accs rest


data AlexLastAcc
  = AlexNone
  | AlexLastAcc !Int !AlexInput !Int
  | AlexLastSkip     !AlexInput !Int

data AlexAcc user
  = AlexAccNone
  | AlexAcc Int
  | AlexAccSkip

  | AlexAccPred Int (AlexAccPred user) (AlexAcc user)
  | AlexAccSkipPred (AlexAccPred user) (AlexAcc user)

type AlexAccPred user = user -> AlexInput -> Int -> AlexInput -> Bool

-- -----------------------------------------------------------------------------
-- Predicates on a rule

alexAndPred p1 p2 user__ in1 len in2
  = p1 user__ in1 len in2 && p2 user__ in1 len in2

--alexPrevCharIsPred :: Char -> AlexAccPred _
alexPrevCharIs c _ input__ _ _ = c == alexInputPrevChar input__

alexPrevCharMatches f _ input__ _ _ = f (alexInputPrevChar input__)

--alexPrevCharIsOneOfPred :: Array Char Bool -> AlexAccPred _
alexPrevCharIsOneOf arr _ input__ _ _ = arr ! alexInputPrevChar input__

--alexRightContext :: Int -> AlexAccPred _
alexRightContext (sc) user__ _ _ input__ =
     case alex_scan_tkn user__ input__ (0) input__ sc AlexNone of
          (AlexNone, _) -> False
          _ -> True
        -- TODO: there's no need to find the longest
        -- match when checking the right context, just
        -- the first match will do.

